<?php
// $Id$
/**
 * Testing Custom subscriptions
 */

require_once drupal_get_path('module', 'notifications') . '/tests/notifications_test_case.inc';

class NotificationsCustomTests extends NotificationsTestCase {
  
  function getInfo() {
    return array(
      'name' => 'Custom Subscriptions',
      'group' => 'Notifications',
      'description' => 'Creates some custom subscription types.' );
  }
  
  function setUp() {
    parent::setUp('notifications_content', 'notifications_custom', 'messaging_mail');
  }
  
  function testCustomSubscriptions() {
    // Create regular user and admin user who will create some custom subscription
    $author = $this->drupalCreateUser();
    //$user2 = $this->drupalCreateUser('subscribe to author', 'subscribe to content', 'subscribe to content type')
    $admin = $this->drupalCreateUser(array('administer notifications'));
    $this->drupalLogin($admin);
    // Subscription visible for user registration
    $data = array(
      'visibility' => 1,
      'register' => 1,
    );
    $fields = array(
      array('type' => 'type', 'value' => 'story'),
      array('type' => 'author', 'value' => $author->name),
    );    
    $this->createCustomSubscription($data, $fields); 
  }
  
  /**
   * Create custom subscription through admin form
   */
  function createCustomSubscription($data, $fields = array()) {
    $data += array(
      'newtype' => 'custom_' . $this->randomName(10),
      'title' => $this->randomName(20),
      'name' => $this->randomName(40),
      'description' => $this->randomName(80),
    );
    foreach ($data as $field => $value) {
      $edit["subscription[$field]"] = $value;
    }
    $this->drupalPost('admin/messaging/customsubs/new', $edit, t('Save'));
    $this->assertText('The subscription type has been created.');
    $subscription = notifications_custom_load($data['newtype']);
    $this->assertTrue($subscription, 'A new custom subscription type has been created');
    if ($fields) {
       $subscription = $this->createCustomFields($subscription, $fields);
    }
    return $subscription;
  }

  /**
   * Add fields to custom subscription
   * 
   * Fields are arrays with 'type' and 'value'. The value must be the one entered in the form (i.e. user name)
   */
  function createCustomFields($subscription, $fields) {
    $path = "admin/messaging/customsubs/csid/$subscription->csid/fields";
    $this->drupalGet($path);
    $this->assertText('Fields', 'The Fields page for this subscription type shows up.');
    $index = count($subscription->fields);
    $this->drupalGet($path);
    // Note we are posting to NULL path, this is for multi-stage forms
    foreach ($fields as $field) {
      $edit = array('fields[name][new]' => $field['type']);
      $this->drupalPost(NULL, $edit, t(t('Add new field')));
      $edit = array("fields[edit][$index]" => $field['value']);      
      $index ++;
    }
    $this->drupalPost(NULL, $edit, t(t('Save fields')));
    $this->assertText('The fields for this subscription have been updated.');
    // Reload subscription
    messaging_static_reset('notifications_custom_load');
    $subscription = notifications_custom_load($subscription->csid);
    $this->assertEqual(count($subscription->get_fields()), $index, "The right number of fields have been added for this subscription. ($index)");
    return $subscription;
  }
}