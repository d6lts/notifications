<?php
// $Id$
/**
 * Class for testing anonymous subscriptions
 */

require_once drupal_get_path('module', 'notifications') . '/tests/notifications_test_case.inc';

class NotificationsAnonymousTests extends NotificationsTestCase {
  
  function getInfo() {
    return array(
      'name' => 'Anonymous Subscriptions',
      'group' => 'Notifications',
      'description' => 'Subscriptions and Notifications for anonymous users.' );
  }
  
  function setUp() {
    parent::setUp('messaging_mail', 'notifications_content', 'notifications_ui', 'notifications_anonymous');
    $this->anonymousCreatePermissions(array('access content', 'maintain own subscriptions', 'subscribe to author', 'subscribe to content', 'subscribe to content type'));
    // Set some defaults
    variable_set('notifications_default_send_interval', 0); // Immediately
    variable_set('notifications_default_send_method', 'mail'); // Mail for everybody
    variable_set('messaging_method_mail', array('queue' => 1, 'log' => 1)); // Enable queue, log for mail
    // This send interval (0) and method (mail) are defaults enabled for anonymous
    notifications_include('process.inc');
  }
  
  function testAnonymousSubscriptions() {
    // Create a new content-type for subscribing to
    $ctype = $this->drupalCreateContentType();
    // Enable this content type for thread/author/type subscriptions
    variable_set('notifications_content_type', array('thread', 'nodetype', 'author'));
    // Enable all UI pages
    $this->enableUIPages();
    $this->enableSubscriptionTypes();
    // Create user and email address
    $anonymous = drupal_anonymous_user();
    $mail = $this->createMail();
    // Create a content type subscription
    $this->anonymousCreateSubscription($mail, 'nodetype', array('type' => $ctype->type));
    $this->printPage();
    // Create a node and check the subscription has worked
    $author = $this->drupalCreateUser(array("create $ctype->type content"));
    $node = $this->drupalCreateNode(array('type' => $ctype->type, 'uid' => $author->uid));
    // There should be a queued notification
    $this->assertUserRows('notifications_queue', 1, 0);
    // Fix access content permissions for anonymous
    // Add more tests
  }
  
  function anonymousCreateSubscription($mail, $type, $fields, $messages = array()) {
    $anonymous = drupal_anonymous_user();
    $post["destination_address[mail]"] = $mail;
    $this->contentCreateSubscription($anonymous, $type, $fields, $messages, $post);
  }
  
  function createMail() {
    return $this->randomName() . '@example.com';
  }
  function anonymousCreatePermissions($perms) {
    $data = array(
      'rid' => 1,
      'tid' => 0,
      'perm' => implode(', ', $perms),
    );
    return drupal_write_record('permission', $data);
  }
}